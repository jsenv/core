/**

This test is meant to work like this:

It reads the html files generated by ./generate-internal-error-html-files.js
and ensure regenerating them gives the same output.
The goal is to force dev to regenerate the html files and ensure they looks correct
with a human eye verification before commiting anything that would change them.

-> This is snapshot testing to force a human review when internal error html is modified.

*/

import { assert } from "@jsenv/assert";
import { readFileSync, readdirSync } from "node:fs";

const readHtmlFiles = () => {
  const htmlFilesDirectoryUrl = new URL("./snapshots/", import.meta.url);
  const htmlFilenames = readdirSync(htmlFilesDirectoryUrl);
  const htmlFiles = {};
  htmlFilenames.forEach((htmlFilename) => {
    // to ensure order is predictable
    htmlFiles[htmlFilename] = null;
  });
  htmlFilenames.forEach((htmlFilename) => {
    const htmlFileUrl = new URL(htmlFilename, htmlFilesDirectoryUrl);
    htmlFiles[htmlFilename] = String(readFileSync(htmlFileUrl));
  });
  return htmlFiles;
};

// disable on windows because it would fails due to line endings (CRLF)
if (process.platform !== "win32") {
  const expect = readHtmlFiles();
  await import("./generate_html_snapshot_files.mjs");
  const actual = readHtmlFiles();
  assert({ actual, expect });
}
